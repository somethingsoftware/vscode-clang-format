{
  "name": "clang-format-2",
  "displayName": "New-clang-format",
  "description": "Use Clang-Format in Visual Studio Code",
  "version": "1.9.3",
  "publisher": "Something-Software",
  "engines": {
    "vscode": "^1.15.0"
  },
  "galleryBanner": {
    "color": "#005577",
    "theme": "dark"
  },
  "dependencies": {
    "sax": "^1.2.4"
  },
  "categories": [
    "Formatters"
  ],
  "keywords": [
    "C++",
    "JavaScript",
    "Objective-C",
    "Clang",
    "LLVM",
    "Protobuf",
    "CUDA"
  ],
  "main": "./out/src/extension",
  "activationEvents": [
    "onStartupFinished"
  ],
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "Clang-Format configuration",
      "properties": {
        "clang-format.executable": {
          "additionalProperties": false,
          "order": 1,
          "type": "object",
          "properties": {
            "default": {
              "type": "string",
              "default": "clang-format"
            },
            "windows": {
              "type": "string"
            },
            "linux": {
              "type": "string"
            },
            "osx": {
              "type": "string"
            }
          },
          "default": {
            "default": "clang-format"
          },
          "description": "clang-format executable path"
        },
        "clang-format.style.default": {
          "order": 2,
          "type": "string",
          "title": "Style",
          "default": "LLVM",
          "description": "clang-format style.\n(-style=value, value can be file, LLVM, Google, Chromium, Mozilla, WebKit or json configure)"
        },
        "clang-format.fallbackStyle.default": {
          "order": 3,
          "type": "string",
          "title": "Fallback Style",
          "default": "",
          "description": "clang-format fallback style.\n(-fallback-style=value, value can be none, LLVM, Google, Chromium, Mozilla, WebKit)"
        },
        "clang-format.style.languages": {
          "order": 6,
          "type": "object",
          "default": {},
          "additionalProperties": {
            "type": "string"
          },
          "description": "Object with the key as LanguageId and value as a clang-format style."
        },
        "clang-format.fallbackStyle.languages": {
          "order": 7,
          "type": "object",
          "default": {},
          "additionalProperties": {
            "type": "string"
          },
          "description": "Object with the key as LanguageId and value as a clang-format fallback style."
        },
        "clang-format.enabledLanguageIds": {
          "order": 4,
          "description": "Specify a list of languageIds to format.",
          "title": "Enabled Language Ids",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "c"
          ],
          "uniqueItems": true
        },
        "clang-format.assumeFilename": {
          "order": 99,
          "type": "string",
          "default": "",
          "description": "When reading from stdin, clang-format assumes this filename to look for a style config file (with -style=file) and to determine the language.\nThe default value is the current filename being formated."
        },
        "clang-format.additionalArguments": {
          "order": 100,
          "type": "string",
          "default": "",
          "description": "Additional arguments to pass to clang-format"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "tsc -p ./",
    "compile": "tsc -watch -p ./",
    "postinstall": "node ./node_modules/vscode/bin/install"
  },
  "devDependencies": {
    "@types/node": "^13.7.0",
    "@types/sax": "^1.2.1",
    "typescript": "^3.7.5",
    "vsce": "^2.14.0",
    "vscode": "^1.1.37",
    "@vscode/vsce": "^3.0.0"
  },
  "icon": "clang-format.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/somethingsoftware/vscode-clang-format"
  },
  "license": "MIT"
}
